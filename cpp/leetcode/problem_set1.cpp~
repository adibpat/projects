#include<iostream>
#include<string>
#include<vector>
#include<map>

using namespace std;

class Solution1_bf {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> solution(2,0);
        for (int i = 0; i < nums.size(); ++i) {
            for (int j = i+1; j < nums.size(); ++j) {
                if(nums[i]+nums[j]==target) {
                    solution[0]=i;
                    solution[1]=j;
                    return(solution);
                }
            }
        }
        return solution;
    }
};

class Solution1_hm {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> solution(2,0);
        multimap<int, int> compliment;
        for (int i = 0; i < nums.size(); ++i) {
            multimap<int, int>::iterator iter = compliment.find(target-nums[i]);
            if (iter != compliment.end()) {
                solution[0] = iter->second;
                solution[1] = i;
                return solution;
            }
            compliment.insert(pair<int,int>(nums[i], i));
        }
        return solution;
    }
};

int main() {
    Solution1_hm x;
    int arr[] = {3,3};
    vector<int> a(arr, arr + sizeof(arr)/sizeof(arr[0])); 
    vector<int> solution = x.twoSum(a,6);
    //solution = x.twoSum(a,12);
    
    cout<<solution[0]<<" "<<solution[1]<<endl;

    string s = "Aditya will be a good husband";

    string ss = s.substr(5);

    cout<<ss;
    
    return(0);
}
